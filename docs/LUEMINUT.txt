
== Toimintaperiaate ==

=== Tietokanta ===

Services palvelunhallintajärjestelmässä on lähtökohtaisena ajatuksena
rajata kättäjien oikeudet muutoksiin jo tietokantatasolla. Käyttäjät 
kirjautuvat tietokantaan omilla tunnuksillaan, eli ovat siten postgresql
käyttäjiä, ja tekevät muuutokset omilla tunnuksillaan. Normaalien käyttäjien
oikeudet tietokannassa on rajattu vieweihin, jotka näyttävät vain sen tiedon
mikä liittyy kirjautuneeseen käyttäjään. Käyttäjä voi muuttaa haluamiaan
asioita lisäämällä, poistamalla ja muokkaamalla viewin rivejä. Tietokanta
tarkistaa jokaisessa operaatiossa, että käyttäjä ei tehnyt mitään, mitä hän
ei olisi saanut tehdä.

Tietokannassa on myös mahdollista luoda admin-tunnuksia, mitkä näkevät myös
muiden käyttäjien tiedot ja pystyvät muokkaamaan niitä. Admin-käyttäjillä on 
myös tarvittavat oikeudet hyväksyä odottamaan jääneitä rivejä.

=== Kirjasto ===

Services kirjastossa on python funktioita, millä voi suorittaa muutoksia
tietokantaan. Funktiot on jaoteltu kirjastoon viewien mukaisesti.
Jokaiselle viewille on list_, get_, add_, ja delete_ funktiot, millä 
pystyy tekemään haluttuja muutoksia. Virhetilanteissa funktiot nostavat
RuntimeError-virheen. 

Kirjasto käyttää tietokantaan yhdistämiseen SQLAlchemy- ja psycopg2- 
kirjastoja.

== Periaatteita ==

=== Teknisiä periaatteita ===

- Tarvittavat dns-tietueet luodaan dynaamisesti

=== Muita periaatteita ===

- Domain on nimiavaruus ( ja myös mahdollisesti dns-zone )
- Palvelut kuuluvat johonkin domainiin
- Käyttäjät kuuluvat johonkin domainiin
- Saman domainin käyttäjillä on valtaa lisätä itselleen palveluita saman domainin palveluihin.



== Historia ==

Services tietokanta ja siihen liittyvä Services python kirjasto on
alunperin kehitetty korjaamaan Kapsi Internet-käyttäjät ry:tä
vaivannutta palvelunhallinnan puutetta. Tarkoituksena  oli kehittää
palvelunhallintaympäristö, missä käyttäjät voisivat itse muuttaa omia 
tietojaan ja hallita palveluitaan. Syntyi ajatus tietokannasta, joka 
sisältäisi tiedon siitä, mitä milläkin käyttäjällä on ja lisäksi 
huolehtisi samalla käyttöoikeuksista. PostgreSQL osoittautui hyväksi 
tietokannaksi tälle projektille.

Services-tietokantaa ja -kirjastoa on alettu kehittämään kesällä 2012.